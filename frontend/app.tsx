import * as React from 'react';
import * as ReactDOM from 'react-dom';
import { Game } from '~/ui/game';
import { Lobby } from '~/ui/lobby';
import websocket from '~/ui/websocket';

export class App extends React.Component {
  constructor(props) {
    super(props);

    this.state = { gameID: null };

    this.state.playerID = localStorage.getItem('playerId');

    if (document.location.hash) {
      this.state.gameID = document.location.hash.slice(1);
    }
    if (window.selectedGameID) {
      this.state.gameID = window.selectedGameID;
    }

    if (this.state.gameID) {
      localStorage.setItem('gameName', this.state.gameID);
    }
  }

  render() {
    let pane;
    if (this.state.gameID) {
      pane = <Game gameID={this.state.gameID} playerID={this.state.playerID} />;
    } else {
      pane = <Lobby autogeneratedGameID={window.autogeneratedGameID} />;
    }

    return (
      <div id="application">
        <div id="topbar">
          <h1>
            <a href={'http://' + window.location.host}>CrossClues</a>
          </h1>
        </div>
        {pane}
      </div>
    );
  }
}

// TODO: Need to prevent full app recreation when we navigate
// So we can share context between game and lobby (e.g. websocket connection)
const app = React.createElement(App, {}, null);

document.addEventListener('DOMContentLoaded', (event) => {
  ReactDOM.render(app, document.getElementById('app'));
});
